# 代替案: 一太郎のコマンドライン機能を使用する方法

$sourceFolder = “C:\変換元”
$destFolder = “C:\変換後”
$jtPath = “C:\Program Files\Justsystem\一太郎\JTW.exe”  # 一太郎の実行ファイルパス

# 保存先フォルダが存在しない場合は作成

if (!(Test-Path $destFolder)) {
New-Item -ItemType Directory -Path $destFolder
}

# バッチ変換用のマクロファイルを作成

$macroContent = @”
[MACRO]
; 一太郎マクロ：JTDからDOCXへの変換
FILEOPEN “%1”
FILESAVEAS “%2”, FILETYPE=DOCX
FILECLOSE
QUIT
“@

$macroFile = Join-Path $env:TEMP “convert_jtd.mac”
$macroContent | Out-File -FilePath $macroFile -Encoding Default

# フォルダ内のすべての.jtdファイルを処理

Get-ChildItem -Path $sourceFolder -Filter “*.jtd” | ForEach-Object {
$srcFile = $*.FullName
$baseName = $*.BaseName
$destDocx = Join-Path $destFolder “$baseName.docx”

```
Write-Host "変換中: $srcFile"

# 一太郎をマクロモードで起動
$args = "/m`"$macroFile`" `"$srcFile`" `"$destDocx`""
Start-Process -FilePath $jtPath -ArgumentList $args -Wait -NoNewWindow

Write-Host "変換完了: $baseName.docx"
```

}

# 一時マクロファイルを削除

Remove-Item $macroFile

Write-Host “すべての変換処理が完了しました。”
